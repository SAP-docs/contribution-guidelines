"use strict";
const tslib_1 = require("tslib");
const command_1 = require("@oclif/command");
const mdlib_1 = require("@cpmscf/mdlib");
const checker_command_1 = require("../checker-command");
class UploadCommand extends command_1.Command {
    run() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const conf = mdlib_1.loadConfig();
            const ditaUploader = new mdlib_1.DitaUploader();
            try {
                yield ditaUploader.upload(conf);
                this.log("File successfully uploaded to UACP.");
            }
            catch (error) {
                this.error(`Could not generate UACP ZIP: ${error.message}`, {
                    exit: checker_command_1.EXIT_CODE_BAD_CONFIG,
                });
            }
        });
    }
}
UploadCommand.description = "Upload ZIP files created via the 'dita' command (or otherwise) to the UACP system. " +
    "For configuration, provide configuration via a `.cdcrc` file as described in " +
    "[the `@cpmscf/mdlib` documentation](https://github.wdf.sap.corp/D053411/cpmscf-docs-lib#configuration).";
UploadCommand.flags = {
    help: command_1.flags.help({ char: "h" }),
};
module.exports = UploadCommand;
//# sourceMappingURL=upload.js.map