/**
 * @author D053411
 * @copyright 2020 SAP SE
 * @license SEE LICENSE IN LICENSE
 * @module titlecase
 * @fileoverview
 *   Warn when headings increment with more than 1 level at a time.
 *
 * @example {"name": "ok.md"}
 *
 *   # Alpha
 *
 *   ## Bravo
 *
 * @example {"name": "not-ok.md", "label": "input"}
 *
 *   # Charlie
 *
 *   ### Delta
 *
 * @example {"name": "not-ok.md", "label": "output"}
 *
 *   3:1-3:10: Heading levels should increment by one level at a time
 */
import { Settings } from "unified";
import unified = require("unified");
import { RcConfig } from "..";
export declare type TermReplacementConfig = TermReplacement[];
export interface TermReplacement {
    /**
      * Pattern to use for inappropriate term matching
      */
    match: string;
    /**
      * List of replacements proposed to the user. The first one will be used in auto fixes
      */
    replace: string[];
    /**
     * Optional node types to be excluded from matching. Defaults to empty array, matching
     * all text nodes. The visitor names in https://github.com/remarkjs/remark/blob/12.0.1/packages/remark-stringify/lib/compiler.js#L37
     * coincide with node names available in Unified.
     */
    excludeNodes?: NodeLimitationList;
    /**
     * See `excludeNodes`, but this functions as an allow list rather than a deny list. Note that both options cannot be used together, and
     * if `excludeNodes` is not empty, `includeNodes` is ignored.
     */
    includeNodes?: NodeLimitationList;
    /**
     * Optional comment
     */
    comment?: string;
}
declare type NodeLimitation = "heading" | "paragraph" | "blockquote" | "list" | "listItem" | "inlineCode" | "code" | "html" | "strong" | "emphasis" | "delete" | "link" | "linkReference" | "imageReference" | "definition" | "image" | "footnote" | "footnoteReference" | "footnoteDefinition" | "table" | "tableCell";
declare type NodeLimitationList = [] | NodeLimitation[];
export declare function termRule(config: RcConfig): unified.Attacher<[], Settings>;
export {};
//# sourceMappingURL=rule-terms.d.ts.map