"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const experimental_utils_1 = require("@typescript-eslint/experimental-utils");
const util_1 = require("../util");
exports.default = util_1.createRule({
    name: 'command-class-variables',
    meta: {
        type: 'problem',
        docs: {
            description: '',
            category: 'Possible Errors',
            recommended: false,
        },
        schema: [],
        messages: {
            errorDescription: `variable 'static description' is not defined in class`,
            errorExample: `variable 'static examples' is not defined in class`,
            errorStaticDescription: `variable 'description' should be static`,
            errorStaticExample: `variable 'examples' should be static`
        }
    },
    defaultOptions: [],
    create(context) {
        return {
            'ClassDeclaration, ClassExpression'(node) {
                const sourceCode = context.getSourceCode();
                const properties = node.body.body;
                let errorDescription = false;
                let errorStaticDescription = false;
                let errorExample = false;
                let errorStaticExample = false;
                for (let element of properties) {
                    if (element.type === experimental_utils_1.AST_NODE_TYPES.ClassProperty) {
                        let name = sourceCode.text.slice(...element.key.range);
                        if (name === 'description') {
                            errorStaticDescription = !element.static;
                            errorDescription = false;
                            break;
                        }
                        else {
                            errorDescription = true;
                        }
                    }
                }
                for (let element of properties) {
                    if (element.type === experimental_utils_1.AST_NODE_TYPES.ClassProperty) {
                        let name = sourceCode.text.slice(...element.key.range);
                        if (name === 'examples') {
                            errorStaticExample = !element.static;
                            errorExample = false;
                            break;
                        }
                        else {
                            errorExample = true;
                        }
                    }
                }
                if (errorStaticDescription) {
                    context.report({
                        node,
                        messageId: 'errorStaticDescription'
                    });
                }
                else if (errorDescription) {
                    context.report({
                        node,
                        messageId: 'errorDescription'
                    });
                }
                if (errorStaticExample) {
                    context.report({
                        node,
                        messageId: 'errorStaticExample'
                    });
                }
                else if (errorExample) {
                    context.report({
                        node,
                        messageId: 'errorExample'
                    });
                }
            }
        };
    },
});
//# sourceMappingURL=command-class-variables.js.map